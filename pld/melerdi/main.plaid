package melerdi;

import melerdi.*;
import melerdi.gui.*;
import melerdi.gui.component.*;
import melerdi.gui.action.*;
import melerdi.gui.container.panel.*;
import melerdi.gui.container.window.*;
import melerdi.gui.widgets.button.*;
import melerdi.gui.widgets.label.*;
import melerdi.gui.widgets.textbox.*;
import melerdi.gui.container.window.windowbound.*;
import melerdi.gui.container.window.windowstate.*;
import melerdi.gui.container.window.windowstatus.*;

method main() {
java.lang.System.out.println("test1");

	val w = makeWindow("Plaid Test Window");
//	printLine(w);
//	  w.disable();
//	match (w) 
//	{
//		case DisabledWindow 
//		{
//			printLine(" window is in DisabledWindow state;!");
//		}
//	};
//	w.enable();
//	match (w) 
//	{
//		case EnabledWindow 
//		{
//			printLine(" window is in EnabledWindow state;!");
//		}
//	};
	
	val p = makePanel();	
	val l1= makeLabel("Label1 :");
	val t1= makeTextBox("TextBox1 ");
	val b= makeButton("Disable");
	val b1= makeButton("Hide The Button");	
		
		p.setParent(l1);
		p.setParent(t1);
		p.setParent(b);
		p.setParent(b1);
		
	val b2=makeParentedButton(p,"multithreading");
	val b3= makeParentedButton(p,"singlethreading");
	val b4= makeParentedButton(p,"hide multithreading");
		w.pack();
        w.show();
        
      
	
	w.windowIconofied(
	{
		printLine("Start Window Iconofied...");
		printLine("Window hav been iconofied");
		printLine("What's wrong?");

	});
//    w.windowClosing({
//		printLine("Start calling callback...");
//	    notifyClose(); 
//		printLine("What's wrong?");
//   
//	});
//w.windowClosing();
//w.windowIconofied();



	w.setParent(p);

	w.refresh();

	
	t1.setAction(
	{
		printLine(t1.getText()); 
		printLine("whats wrong");
	});
	t1.gainFocus(
	{
		printLine(" the TextBox gained focus")
		rintLine("whats wrong");
	});	
	t1.lostFocus(
	{
		printLine(" the TextBox lost focus")
		rintLine("whats wrong");
	});	
	b.setAction(
	{
		match (b1)
		{
			case DisabledComponent
			{
				printLine("the button is Disable");
				b1.enable();
				b.setText("disable");
			}
			case EnabledComponent
			{
				printLine("the button is Enable");
				b1.disable();
				b.setText("enable");
			}

		};
		printLine("What's wrong?");
	});

	b2.setMultiAction(
	{
		printLine("Multithreading testing.....");
		printLine("Thread(1)is starting .....");
		java.lang.Thread.sleep(5000);
		var time =java.util.GregorianCalendar.new();
		java.lang.System.out.println(time.get( java.util.Calendar.MINUTE).toString() + ":"+ time.get( java.util.Calendar.SECOND).toString());
		printLine("Thread(1) finishd");
		printLine("What's wrong?");
	});
	b2.setMultiAction(
	{
	printLine("Thread(2)is starting .....");
		java.lang.Thread.sleep(7000);
		var time =java.util.GregorianCalendar.new();
		java.lang.System.out.println(time.get( java.util.Calendar.MINUTE).toString() + ":"+ time.get( java.util.Calendar.SECOND).toString());
		printLine("Thread(2) finishd");
		printLine("What's wrong?");
	});
	b2.setMultiAction(
	{
		printLine("Thread(3)is starting .....");
		java.lang.Thread.sleep(8000);
		var time =java.util.GregorianCalendar.new();
		java.lang.System.out.println(time.get( java.util.Calendar.MINUTE).toString() + ":"+ time.get( java.util.Calendar.SECOND).toString());
		printLine("Thread(3) finishd");
		printLine("What's wrong?");
	});

	b3.setAction(
	{
		printLine("Single threading testing.....");
		printLine("starting single threading.....");
		java.lang.Thread.sleep(5000);
		printLine("Test finishd");
		printLine("What's wrong?");
	});


	b4.setAction(
	{
		b2.hide();
		b4.setText("try again to hide")
		printLine("What's wrong?");
	});
	b1.setAction(
	{
	match (b)
	{
		case VisibleButton
		{
			b.hide();
			b1.setText("show the button");
			printLine(" the button has been disapeared");
			printLine("What's wrong?");
		}
		case InvisibleButton
		{
			b.show();
			b1.setText("hide the button");
			printLine(" the button has been apeared");
			printLine("What's wrong?");
		}
	};
	});
	p.refresh();

	//   

		

	w.setSize(400,200);
//	w.show();
}